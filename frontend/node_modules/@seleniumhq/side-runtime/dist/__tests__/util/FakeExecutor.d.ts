import { CommandShape } from '@seleniumhq/side-model';
import Variables from '../../variables';
declare class FakeExecutor {
    customCommands: {
        [key: string]: () => void;
    };
    implicitWait: number;
    initialized: boolean;
    killed: boolean;
    variables: Variables;
    constructor(..._args: any[]);
    init({ variables }: {
        variables: Variables;
    }): void;
    executeHook(): void;
    name(command: string): string;
    cancel(): void;
    cleanup(): void;
    kill(): Promise<void>;
    beforeCommand(_commandObject: CommandShape): Promise<void>;
    afterCommand(_commandObject: CommandShape): void;
    doAssert(): void;
    doAssertText(): void;
    doPause(timeout?: number): Promise<unknown>;
    doOpen(): void;
    doVerify(): void;
    doVerifyText(): void;
    doFake(..._args: any[]): void;
    evaluateConditional(): void;
}
export default FakeExecutor;
//# sourceMappingURL=FakeExecutor.d.ts.map
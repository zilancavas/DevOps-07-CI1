import { CommandNode } from './command-node';
import { CommandShape } from '@seleniumhq/side-model';
import { CommandNodeOptions } from '../types';
import { Fn } from '@seleniumhq/side-commons';
export { createPlaybackTree };
export { createCommandNodesFromCommandStack };
export interface PlaybackTree {
    startingCommandNode: CommandNode;
    nodes: CommandNode[];
    containsControlFlow: boolean;
}
declare function createPlaybackTree(commandStack: CommandShape[], { isValidationDisabled, emitControlFlowChange }?: CommandNodeOptions): PlaybackTree;
declare function createCommandNodesFromCommandStack(commandStack: CommandShape[], isValidationDisabled?: boolean, emitControlFlowChange?: Fn): CommandNode[];
export type ConnectFn = (commandNode: CommandNode, _nextCommandNode: CommandNode, stack: CommandNode[], state?: any) => void;
//# sourceMappingURL=index.d.ts.map
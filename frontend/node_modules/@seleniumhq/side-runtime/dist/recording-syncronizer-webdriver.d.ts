import { WebDriverExecutor } from '.';
export interface RecorderSynchronizerInput {
    executor: WebDriverExecutor;
    sessionId: string;
    logger: Console;
}
export default function createRecorderSyncronizerForWebdriverExecutor({ executor, sessionId, logger, }: RecorderSynchronizerInput): {
    hooks: {
        onStoreWindowHandle: ({ windowHandle, windowHandleName, }: import("./types").StoreWindowHandleHookInput) => Promise<void>;
        onWindowAppeared: ({ windowHandle, windowHandleName, }: import("./types").WindowAppearedHookInput) => Promise<void>;
        onWindowSwitched: ({ windowHandle }: import("./types").WindowSwitchedHookInput) => Promise<void>;
    };
    syncAllPendingWindows: () => Promise<void>;
};
//# sourceMappingURL=recording-syncronizer-webdriver.d.ts.map
declare const argTypes: {
    alertText: {
        name: string;
        description: string;
    };
    answer: {
        name: string;
        description: string;
    };
    attributeLocator: {
        name: string;
        description: string;
    };
    arrayVariableName: {
        name: string;
        description: string;
    };
    conditionalExpression: {
        name: string;
        description: string;
    };
    coord: {
        name: string;
        description: string;
    };
    expectedValue: {
        name: string;
        description: string;
    };
    expression: {
        name: string;
        description: string;
    };
    formLocator: {
        name: string;
        description: string;
    };
    handle: {
        name: string;
        description: string;
    };
    iteratorVariableName: {
        name: string;
        description: string;
    };
    json: {
        name: string;
        description: string;
    };
    keySequence: {
        name: string;
        description: string;
    };
    locator: {
        name: string;
        description: string;
    };
    locatorOfDragDestinationObject: {
        name: string;
        description: string;
    };
    locatorOfObjectToBeDragged: {
        name: string;
        description: string;
    };
    loopLimit: {
        name: string;
        description: string;
    };
    message: {
        name: string;
        description: string;
    };
    optionLocator: {
        name: string;
        description: string;
    };
    pattern: {
        name: string;
        description: string;
    };
    region: {
        name: string;
        description: string;
    };
    resolution: {
        name: string;
        description: string;
    };
    script: {
        name: string;
        description: string;
    };
    selectLocator: {
        name: string;
        description: string;
    };
    testCase: {
        name: string;
        description: string;
    };
    text: {
        name: string;
        description: string;
    };
    times: {
        name: string;
        description: string;
    };
    url: {
        name: string;
        description: string;
    };
    value: {
        name: string;
        description: string;
    };
    variableName: {
        name: string;
        description: string;
    };
    variableNameOptional: {
        name: string;
        isOptional: boolean;
        description: string;
    };
    waitTime: {
        name: string;
        description: string;
    };
    xpath: {
        name: string;
        description: string;
    };
};
export type ArgTypes = typeof argTypes;
export type ArgNames = ArgTypes[keyof ArgTypes]['name'];
export interface ArgType {
    name: ArgNames;
    description: string;
    isOptional?: boolean;
}
export default argTypes;
//# sourceMappingURL=ArgTypes.d.ts.map